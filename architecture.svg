<svg viewBox="0 0 1200 800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-size: 28px; font-weight: bold; fill: #2c3e50; }
      .subtitle { font-size: 16px; fill: #555; }
      .layer-title { font-size: 18px; font-weight: bold; fill: #fff; }
      .component { font-size: 14px; fill: #333; }
      .component-small { font-size: 12px; fill: #555; }
      .arrow { stroke: #95a5a6; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .arrow-bold { stroke: #3498db; stroke-width: 3; fill: none; marker-end: url(#arrowhead-bold); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#95a5a6" />
    </marker>
    <marker id="arrowhead-bold" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#3498db" />
    </marker>
  </defs>

  <!-- Title -->
  <text x="600" y="40" text-anchor="middle" class="title">Boost.Asio 기반 네트워크 서버 아키텍처</text>
  <text x="600" y="65" text-anchor="middle" class="subtitle">멀티스레드 비동기 TCP 채팅 서버</text>

  <!-- Client Layer -->
  <rect x="50" y="100" width="300" height="180" rx="10" fill="#e74c3c" opacity="0.9"/>
  <text x="200" y="130" text-anchor="middle" class="layer-title">Client Layer</text>
  
  <rect x="70" y="150" width="120" height="40" rx="5" fill="#fff"/>
  <text x="130" y="175" text-anchor="middle" class="component">LoginWindow</text>
  
  <rect x="210" y="150" width="120" height="40" rx="5" fill="#fff"/>
  <text x="270" y="175" text-anchor="middle" class="component">LobbyWindow</text>
  
  <rect x="70" y="200" width="120" height="40" rx="5" fill="#fff"/>
  <text x="130" y="225" text-anchor="middle" class="component">ChatWindow</text>
  
  <rect x="210" y="200" width="120" height="40" rx="5" fill="#fff"/>
  <text x="270" y="220" text-anchor="middle" class="component">ClientSession</text>
  <text x="270" y="235" text-anchor="middle" class="component-small">(Connection)</text>

  <!-- ServerCore Layer -->
  <rect x="400" y="100" width="750" height="280" rx="10" fill="#3498db" opacity="0.9"/>
  <text x="775" y="130" text-anchor="middle" class="layer-title">ServerCore Layer (Boost.Asio 기반)</text>

  <!-- Network Components -->
  <rect x="420" y="150" width="130" height="50" rx="5" fill="#fff"/>
  <text x="485" y="172" text-anchor="middle" class="component">AsioService</text>
  <text x="485" y="190" text-anchor="middle" class="component-small">IO Context 관리</text>

  <rect x="570" y="150" width="130" height="50" rx="5" fill="#fff"/>
  <text x="635" y="172" text-anchor="middle" class="component">AsioAcceptor</text>
  <text x="635" y="190" text-anchor="middle" class="component-small">연결 수락</text>

  <rect x="720" y="150" width="130" height="50" rx="5" fill="#fff"/>
  <text x="785" y="172" text-anchor="middle" class="component">AsioSession</text>
  <text x="785" y="190" text-anchor="middle" class="component-small">비동기 I/O</text>

  <rect x="870" y="150" width="130" height="50" rx="5" fill="#fff"/>
  <text x="935" y="172" text-anchor="middle" class="component">SessionManager</text>
  <text x="935" y="190" text-anchor="middle" class="component-small">세션 관리</text>

  <rect x="1020" y="150" width="110" height="50" rx="5" fill="#fff"/>
  <text x="1075" y="172" text-anchor="middle" class="component">TaskQueue</text>
  <text x="1075" y="190" text-anchor="middle" class="component-small">상태 관리</text>

  <!-- Packet Processing -->
  <rect x="420" y="220" width="130" height="50" rx="5" fill="#fff"/>
  <text x="485" y="242" text-anchor="middle" class="component">PacketRouter</text>
  <text x="485" y="260" text-anchor="middle" class="component-small">패킷 라우팅</text>

  <rect x="570" y="220" width="130" height="50" rx="5" fill="#fff"/>
  <text x="635" y="242" text-anchor="middle" class="component">PacketBuffer</text>
  <text x="635" y="260" text-anchor="middle" class="component-small">버퍼 관리</text>

  <rect x="720" y="220" width="130" height="50" rx="5" fill="#fff"/>
  <text x="785" y="242" text-anchor="middle" class="component">NetworkHandler</text>
  <text x="785" y="260" text-anchor="middle" class="component-small">패킷 처리</text>

  <!-- Memory & Monitoring -->
  <rect x="870" y="220" width="130" height="50" rx="5" fill="#fff"/>
  <text x="935" y="235" text-anchor="middle" class="component">Pool</text>
  <text x="935" y="255" text-anchor="middle" class="component-small">ObjectPool</text>
  <text x="935" y="268" text-anchor="middle" class="component-small">PacketPool</text>

  <rect x="1020" y="220" width="110" height="50" rx="5" fill="#fff"/>
  <text x="1075" y="238" text-anchor="middle" class="component">MyLogger</text>
  <text x="1075" y="258" text-anchor="middle" class="component-small">로그 시스템</text>

  <!-- Protocol Layer -->
  <rect x="420" y="300" width="710" height="65" rx="5" fill="#f39c12" opacity="0.9"/>
  <text x="775" y="325" text-anchor="middle" class="layer-title" style="fill: #fff;">Protocol Layer (Google Protobuf)</text>
  <text x="560" y="350" text-anchor="middle" class="component-small" style="fill: #fff;">Enum.proto</text>
  <text x="720" y="350" text-anchor="middle" class="component-small" style="fill: #fff;">Struct.proto</text>
  <text x="880" y="350" text-anchor="middle" class="component-small" style="fill: #fff;">Protocol.proto</text>
  <text x="1040" y="350" text-anchor="middle" class="component-small" style="fill: #fff;">패킷 자동화 툴</text>

  <!-- GameServer Layer -->
  <rect x="400" y="420" width="750" height="180" rx="10" fill="#27ae60" opacity="0.9"/>
  <text x="775" y="450" text-anchor="middle" class="layer-title">GameServer Layer</text>

  <rect x="420" y="470" width="150" height="50" rx="5" fill="#fff"/>
  <text x="495" y="492" text-anchor="middle" class="component">GameSession</text>
  <text x="495" y="510" text-anchor="middle" class="component-small">게임 세션 관리</text>

  <rect x="590" y="470" width="150" height="50" rx="5" fill="#fff"/>
  <text x="665" y="492" text-anchor="middle" class="component">Player</text>
  <text x="665" y="510" text-anchor="middle" class="component-small">플레이어 로직</text>

  <rect x="760" y="470" width="150" height="50" rx="5" fill="#fff"/>
  <text x="835" y="492" text-anchor="middle" class="component">ChatRoomManager</text>
  <text x="835" y="510" text-anchor="middle" class="component-small">채팅방 관리</text>

  <rect x="930" y="470" width="180" height="50" rx="5" fill="#fff"/>
  <text x="1020" y="488" text-anchor="middle" class="component">ClientPacketHandler</text>
  <text x="1020" y="506" text-anchor="middle" class="component-small">클라이언트 패킷 처리</text>

  <rect x="760" y="535" width="150" height="50" rx="5" fill="#fff"/>
  <text x="835" y="562" text-anchor="middle" class="component">ChatRoom</text>
  <text x="835" y="577" text-anchor="middle" class="component-small">채팅 로직</text>

  <!-- Arrows - Client to ServerCore -->
  <path d="M 350 190 L 400 190" class="arrow-bold"/>
  <text x="375" y="180" text-anchor="middle" class="component-small">TCP 연결</text>

  <!-- Arrows - ServerCore Internal -->
  <path d="M 550 175 L 570 175" class="arrow"/>
  <path d="M 700 175 L 720 175" class="arrow"/>
  <path d="M 850 175 L 870 175" class="arrow"/>
  
  <!-- Arrows - ServerCore to Protocol -->
  <path d="M 635 270 L 635 300" class="arrow"/>
  <path d="M 785 270 L 785 300" class="arrow"/>

  <!-- Arrows - Protocol to GameServer -->
  <path d="M 775 365 L 775 420" class="arrow-bold"/>

  <!-- Arrows - GameServer Internal -->
  <path d="M 570 495 L 590 495" class="arrow"/>
  <path d="M 740 495 L 760 495" class="arrow"/>
  <path d="M 835 520 L 835 535" class="arrow"/>

  <!-- Thread Pool Info -->
  <rect x="50" y="650" width="1100" height="120" rx="10" fill="#ecf0f1" stroke="#bdc3c7" stroke-width="2"/>
  <text x="600" y="680" text-anchor="middle" style="font-size: 16px; font-weight: bold; fill: #2c3e50;">주요 특징</text>
  
  <text x="100" y="710" style="font-size: 14px; fill: #333;">
    • 비동기 I/O: async_read/async_write, async_accept/async_connect
  </text>
  <text x="100" y="735" style="font-size: 14px; fill: #333;">
    • 메모리 풀링: ObjectPool, PacketPool로 할당/해제 최소화
  </text>
  <text x="650" y="710" style="font-size: 14px; fill: #333;">
    • 패킷 라우팅: PacketRouter가 멀티스레드로 처리
  </text>
  <text x="650" y="735" style="font-size: 14px; fill: #333;">
    • 세션 관리: TaskQueue로 Send/Recv/Disconnect 상태 관리
  </text>
  <text x="650" y="760" style="font-size: 14px; fill: #333;">
    • 스트레스 테스트: 1000개 동시 연결 테스트 완료
  </text>

</svg>